let express,bodyParser,Sequelize,cors,path,items,db;_790‍.w("@babel/polyfill");_790‍.w("express",[["default",["express"],function(v){express=v}]]);_790‍.w("body-parser",[["default",["bodyParser"],function(v){bodyParser=v}]]);_790‍.w("sequelize",[["default",["Sequelize"],function(v){Sequelize=v}]]);_790‍.w("cors",[["default",["cors"],function(v){cors=v}]]);_790‍.w("path",[["default",["path"],function(v){path=v}]]);_790‍.w("./routes/api/items",[["default",["items"],function(v){items=v}]]);_790‍.w("./config/database",[["default",["db"],function(v){db=v}]]);

// const express = require('express');





const app = express();

app.use(bodyParser.json());
app.use(cors());

const PORT = process.env.PORT || 5000;

// Routes


// Use routes
app.use('/api/items', items);

// Serve static assets(front-end build folder) if in production
if (process.env.NODE_ENV === 'production') {
  // Set static folder
  app.use(express.static('client/build'));

  app.get('*', (req, res) => {
    res.sendFile(path.resolve(__dirname, 'client', 'build', 'index.html'));
  });
}

// Database


// Test db
db.sync()
  .then(() => {
    app.listen(PORT);
    console.log(`My app is running on port ${PORT}`);
    console.log('Database connected...');
  })
  .catch(e => _790‍.g.console.log('error...', e));
